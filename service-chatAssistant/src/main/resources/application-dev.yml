server:
  port: 8080

#localhost:8080/v3/api-docs

spring:
  threads:
    virtual:
      enabled: true
  application:
    name: chatAssistant
  jackson:
    time-zone: GMT+8
  datasource:
    url: jdbc:mysql://localhost:3306/sugarweb?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&autoReconnect=true
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    # 连接池设置
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      # 最大连接池数量
      maximum-pool-size: 30
      # 最小空闲线程数量
      minimum-idle: 5
      # 配置获取连接等待超时的时间
      connectionTimeout: 30000
      # 校验超时时间
      validationTimeout: 5000
      # 空闲连接存活最大时间，默认10分钟
      idleTimeout: 600000
      # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认30分钟
      maxLifetime: 1800000
      # 连接测试query（配置检测连接是否有效）
      connectionTestQuery: SELECT 1
      # 多久检查一次连接的活性
      keepaliveTime: 30000
  mvc:
    path-match:
      matching-strategy: ant_path_matcher
  data:
    redis:
      # 地址
      host: localhost
      # 端口，默认为6379
      port: 6379
      # 数据库索引
      database: 0
      # 密码(如没有密码请注释掉)
      # password:
      # 连接超时时间
      timeout: 10s
      # 是否开启ssl
      ssl:
        enabled: false
  quartz:
    # 任务存储类型(直接内存型)
    job-store-type: MEMORY
    # 关闭时等待任务完成
    wait-for-jobs-to-complete-on-shutdown: true
    # 是否覆盖已有的任务
    overwrite-existing-jobs: true
    # 是否自动启动计划程序(注意：最好是设置为false)
    auto-startup: false
    # 延迟启动
    startup-delay: 10s
    jdbc:
      # 数据库架构初始化模式（never：从不进行初始化；always：每次都清空数据库进行初始化；embedded：只初始化内存数据库（默认值））
      # 注意：第一次启动后，需要将always改为never，否则后续每次启动都会重新初始化quartz数据库
      initialize-schema: never
      # 用于初始化数据库架构的SQL文件的路径
      # schema: classpath:sql/tables_mysql_innodb.sql
    # 相关属性配置
    properties:
      org:
        quartz:
          #          scheduler:
          #            # 调度器实例名称
          #            instanceName: UimsScheduler
          #            # 分布式节点ID自动生成
          #            instanceId: AUTO
          #          jobStore:
          #            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore
          #            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
          #            # 表前缀
          #            tablePrefix: QRTZ_
          #            # 是否开启集群
          #            isClustered: true
          #            # 数据源别名（自定义）
          #            dataSource: quartz
          #            # 分布式节点有效性检查时间间隔（毫秒）
          #            clusterCheckinInterval: 10000
          #            useProperties: false
          # 线程池配置
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 10
            threadPriority: 5
            threadsInheritContextClassLoaderOfInitializingThread: true


  ai:
    ollama:
      base-url: 'http://192.168.193.151:11434'
      chat:
        model: 'qwen:4b'
      embedding:
        options:
          model: 'nomic-embed-text'
    vectorstore:
      milvus:
        client:
          host: "192.168.193.151"
          port: 19530
          username: "root"
          password: "milvus"
        databaseName: "default"
        collectionName: "vector_store"
        embeddingDimension: 768
        indexType: IVF_FLAT
        metricType: COSINE
mybatis-plus:
  # mapper扫描路径
  mapperLocations: classpath*:com/sugarweb/*/domain/mapper/*Mapper.xml
  # 实体扫描，多个package用逗号或分号分隔
  typeAliasesPackage: com.sugarweb.uims.domain.po,com.sugarweb.task.domain.po
  # 全局配置
  global-config:
    # 关闭自带banner
    banner: false
    # 数据库配置
    DbConfig:
      # 主键类型
      id-type: assign_id
      table-underline: true
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
      table-format: '%S' #表名大写（%S）小写（%s）
  configuration:
    mapUnderscoreToCamelCase: true
    cacheEnabled: true
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #开启sql日志

############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: satoken
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: true
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: uuid
  # 是否输出操作日志
  is-log: true

# 日志配置
logging:
  level:
    org.hibernate.type.descriptor.sql.BasicBinder: debug

sugarweb:
  cache:
    # redis key前缀
    keyPrefix: uims
    # 线程池数量
    threads: 4
    # Netty线程池数量
    nettyThreads: 8
    # 单节点配置
    singleServerConfig:
      # 客户端名称
      clientName: ${spring.application.name}
      # 最小空闲连接数
      connectionMinimumIdleSize: 8
      # 连接池大小
      connectionPoolSize: 32
      # 连接空闲超时，单位：毫秒
      idleConnectionTimeout: 10000
      # 命令等待超时，单位：毫秒
      timeout: 3000
      # 发布和订阅连接池大小
      subscriptionConnectionPoolSize: 50
  # redis 单机配置(单机与集群只能开启一个另一个需要注释掉)
  openapi:
    title: sugarweb
    description: sugarweb
    version: V1.0
    url: http://localhost:${server.port}${server.servlet.context-path}
    email: sugarcoatx@qq.com
    license: MIT
    license-url: https://mit-license.org/
  dictionary:
    scanPackage: com.sugarweb.uims
    enableCache: true
    cachePrefix: 'sugarweb:dict:'
  param:
    enableRegister: true
    scanPackage: com.sugarweb.uims
    cachePrefix: 'sugarweb:param:'
  email:
    host: "smtp.qq.com"
    port: 465
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_PASSWORD}
  oss:
    bucketName: x
    endPoint: x
    accessKey: x
    secretKey: x
  task:
    # 默认是save(生产环境使用)，reset(会清空所有任务,根据注解重新生成)
    auto-register-strategy: save_and_update

  chat-assistant:
    llm-type: ollama
    ollama:
      base-url: 'http://localhost:11434'
      chat-model:
        model-name: 'qwen2.5:7b'
        temperature: 0.75
        timeout: 60000
      embedding-model:
        model-name: 'nomic-embed-text'
        timeout: 60000
    vector-store-type: in_memory
    # milvus向量库配置方式
    # vector-store-type: milvus
    # milvus:
    #   url: 'http://192.168.193.151:19530'
    #   username: 'root'
    #   password: 'milvus'
    #   database-name: 'default'
    #   collection-name: 'vector_store'
    #   dimension: 768
    #   consistency-level: strong
    #   metric-type: COSINE
    blbl-client:
      # 进blbl浏览器上的cookie
      cookie:
      # 直播房间号
      room-id: 2470538
      # 自己的uid
      self-uid: 20047313

